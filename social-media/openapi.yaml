openapi: 3.1.0
info:
  title: FastAPI
  version: 0.1.0
paths:
  /user/registration:
    post:
      tags:
        - user
      summary: Register a new user
      operationId: user_registration_user_registration_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseUser'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /user/profile:
    put:
      tags:
        - user
      summary: Update profile data
      operationId: update_profile_user_profile_put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseUpdateData'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /user/authentication:
    post:
      tags:
        - user
      summary: User authorization
      operationId: user_authorization_user_authentication_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseAuthorizationData'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionKey'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /post/create:
    post:
      tags:
        - post
      summary: Create new post
      operationId: create_post_post_create_post
      parameters:
        - name: session-key
          in: header
          required: true
          schema:
            type: string
            format: uuid
            title: Session-Key
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseNewPost'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewPostResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /post/:
    put:
      tags:
        - post
      summary: Update post
      operationId: update_post_post__put
      parameters:
        - name: session-key
          in: header
          required: true
          schema:
            type: string
            format: uuid
            title: Session-Key
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BaseUpdatePost'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
        - post
      summary: Get all posts for user
      operationId: get_posts_post__get
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            description: Page number
            default: 1
            title: Page
          description: Page number
        - name: size
          in: query
          required: false
          schema:
            type: integer
            maximum: 100
            minimum: 1
            description: Page size
            default: 50
            title: Size
          description: Page size
        - name: session-key
          in: header
          required: true
          schema:
            type: string
            format: uuid
            title: Session-Key
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_PostItem_'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  '/post/{post_id}':
    delete:
      tags:
        - post
      summary: Delete post by its id
      operationId: delete_post_post__post_id__delete
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: integer
            title: Post Id
        - name: session-key
          in: header
          required: true
          schema:
            type: string
            format: uuid
            title: Session-Key
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
        - post
      summary: Get post by its id
      operationId: get_post_by_id_post__post_id__get
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: integer
            title: Post Id
        - name: session-key
          in: header
          required: true
          schema:
            type: string
            format: uuid
            title: Session-Key
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostItem'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /statistics/likes:
    post:
      tags:
        - statistics
      summary: Post information about likes
      operationId: post_likes_statistics_likes_post
      parameters:
        - name: session-key
          in: header
          required: true
          schema:
            type: string
            format: uuid
            title: Session-Key
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostId'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /statistics/views:
    post:
      tags:
        - statistics
      summary: Post information about views
      operationId: post_likes_statistics_views_post
      parameters:
        - name: session-key
          in: header
          required: true
          schema:
            type: string
            format: uuid
            title: Session-Key
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostId'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    BaseAuthorizationData:
      properties:
        login:
          type: string
          title: Login
        password:
          type: string
          title: Password
      type: object
      required:
        - login
        - password
      title: BaseAuthorizationData
    BaseNewPost:
      properties:
        title:
          type: string
          title: Title
        content:
          type: string
          title: Content
      type: object
      required:
        - title
        - content
      title: BaseNewPost
    BaseUpdateData:
      properties:
        first_name:
          type: string
          title: First Name
        last_name:
          type: string
          title: Last Name
        date_of_birth:
          type: string
          title: Date Of Birth
        mail:
          type: string
          title: Mail
        phone_number:
          type: string
          title: Phone Number
        login:
          type: string
          title: Login
      type: object
      required:
        - first_name
        - last_name
        - date_of_birth
        - mail
        - phone_number
        - login
      title: BaseUpdateData
    BaseUpdatePost:
      properties:
        post_id:
          type: integer
          title: Post Id
        new_title:
          type: string
          title: New Title
        new_content:
          type: string
          title: New Content
      type: object
      required:
        - post_id
        - new_title
        - new_content
      title: BaseUpdatePost
    BaseUser:
      properties:
        first_name:
          type: string
          title: First Name
        last_name:
          type: string
          title: Last Name
        date_of_birth:
          type: string
          title: Date Of Birth
        mail:
          type: string
          title: Mail
        phone_number:
          type: string
          title: Phone Number
        login:
          type: string
          title: Login
        password:
          type: string
          title: Password
      type: object
      required:
        - first_name
        - last_name
        - date_of_birth
        - mail
        - phone_number
        - login
        - password
      title: BaseUser
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
          title: Detail
      type: object
      title: HTTPValidationError
    NewPostResponse:
      properties:
        post_id:
          type: integer
          title: Post Id
      type: object
      required:
        - post_id
      title: NewPostResponse
    Page_PostItem_:
      properties:
        items:
          items:
            $ref: '#/components/schemas/PostItem'
          type: array
          title: Items
        total:
          anyOf:
            - type: integer
              minimum: 0
            - type: 'null'
          title: Total
        page:
          anyOf:
            - type: integer
              minimum: 1
            - type: 'null'
          title: Page
        size:
          anyOf:
            - type: integer
              minimum: 1
            - type: 'null'
          title: Size
        pages:
          anyOf:
            - type: integer
              minimum: 0
            - type: 'null'
          title: Pages
      type: object
      required:
        - items
        - total
        - page
        - size
      title: 'Page[PostItem]'
    PostId:
      properties:
        post_id:
          type: integer
          title: Post Id
      type: object
      required:
        - post_id
      title: PostId
    PostItem:
      properties:
        id:
          type: integer
          title: Id
        user_id:
          type: integer
          title: User Id
        title:
          type: string
          title: Title
        time:
          type: string
          format: date-time
          title: Time
        content:
          type: string
          title: Content
      type: object
      required:
        - id
        - user_id
        - title
        - time
        - content
      title: PostItem
    SessionKey:
      properties:
        session_key:
          type: string
          format: uuid
          title: Session Key
      type: object
      required:
        - session_key
      title: SessionKey
    ValidationError:
      properties:
        loc:
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
          title: Location
        msg:
          type: string
          title: Message
        type:
          type: string
          title: Error Type
      type: object
      required:
        - loc
        - msg
        - type
      title: ValidationError
